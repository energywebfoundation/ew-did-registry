!function s(i,u,a){function c(e,t){if(!u[e]){if(!i[e]){var r="function"==typeof require&&require;if(!t&&r)return r(e,!0);if(d)return d(e,!0);var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}var n=u[e]={exports:{}};i[e][0].call(n.exports,function(t){return c(i[e][1][t]||t)},n,n.exports,s,i,u,a)}return u[e].exports}for(var d="function"==typeof require&&require,t=0;t<a.length;t++)c(a[t]);return c}({1:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t("./models");r.Networks=n.Networks;var o=(s.prototype.get=function(t){return this._dids.get(t)},s.prototype.set=function(t,e){return t.startsWith("did:")?this._setDid(t):this._setDid("did:"+t+":"+e)},s.prototype._setDid=function(t){var e=t.split(":"),r=e[1],o=e[2];if(void 0===o)throw new Error("DID must consist of three parts separated by a colon");if(!n.DID_SCHEME_PATTERNS.NETWORK.test(r))throw new Error("Network must not be empty and consist only of lowcase alphanumerical characters");if(!n.DID_SCHEME_PATTERNS.ID.test(o))throw new Error("Id must consist only of alphanumerical characters, dots, minuses and underscores");return this._dids.set(r,t),this},s);function s(){this._dids=new Map}r.DID=o},{"./models":2}],2:[function(t,e,r){"use strict";var o;Object.defineProperty(r,"__esModule",{value:!0}),(o=r.Networks||(r.Networks={})).Ethereum="eth",o.EnergyWeb="ewc",r.DID_SCHEME_PATTERNS={NETWORK:/^[a-z0-9]+$/,ID:/^[\w.-]*(:[\w.-]*)*$/}},{}]},{},[1]);
//# sourceMappingURL=did.min.js.map
